name: Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-project:latest

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-project:latest

    - name: Deploy to EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        # Create SSH key file
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # Run commands on EC2 instance
        ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          # Update the package list
          sudo yum update -y

          # Install Docker if not already installed
          if ! command -v docker &> /dev/null
          then
            sudo amazon-linux-extras enable docker
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
          fi

          # Add the current user to the docker group
          sudo usermod -aG docker $USER

          # Log in to Docker Hub
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

          # Pull Docker image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-project:latest

          # Run Docker container
          docker run -d -p 300:3000 ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-project:latest
        EOF
